<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sceneserver.manager.mapper.OrderMapper">

    <resultMap type="com.example.sceneserver.manager.po.OrderPo" id="OrdersMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="bName" column="b_name" jdbcType="VARCHAR"/>
        <result property="bCount" column="b_count" jdbcType="INTEGER"/>
        <result property="bPrice" column="b_price" jdbcType="NUMERIC"/>
        <result property="totalPrice" column="total_price" jdbcType="NUMERIC"/>
        <result property="buyerId" column="buyer_id" jdbcType="BIGINT"/>
        <result property="sellId" column="sell_id" jdbcType="BIGINT"/>
        <result property="buyerName" column="buyer_name" jdbcType="VARCHAR"/>
        <result property="sellName" column="sell_name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrdersMap">
        select
          id, b_name, b_count, b_price, total_price, buyer_id, sell_id, buyer_name, sell_name, create_time, `status`
        from orders
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryLikeNameAndBuyerAndSell" resultMap="OrdersMap">
        select
          id, b_name, b_count, b_price, total_price, buyer_id, sell_id, buyer_name, sell_name, status, create_time
        from orders
        <where>
            <if test="bName!=null and bName!=''">
                and b_name like concat('%', #{bName}, '%')
            </if>
            <if test="buyerName!=null and buyerName!=''">
                and buyer_name like concat('%', #{buyerName}, '%')
            </if>
            <if test="sellName!=null and sellName!=''">
                and sell_name like concat('%', #{sellName}, '%')
            </if>
        </where>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="OrdersMap">
        select
          id, b_name, b_count, b_price, total_price, buyer_id, sell_id, buyer_name, sell_name, create_time, status
        from orders
        where buyer_id = #{buyerId}
        order by create_time desc
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into orders(b_name, b_count, b_price, total_price, buyer_id, sell_id, buyer_name,
        sell_name, create_time,status)
        values (#{bName}, #{bCount}, #{bPrice}, #{totalPrice}, #{buyerId}, #{sellId}, #{buyerName}, #{sellName}
        , now(),#{status})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update orders
        <set>
            <if test="bName != null and bName != ''">
                b_name = #{bName},
            </if>
            <if test="bCount != null">
                b_count = #{bCount},
            </if>
            <if test="bPrice != null">
                b_price = #{bPrice},
            </if>
            <if test="totalPrice != null">
                total_price = #{totalPrice},
            </if>
            <if test="buyerId != null">
                buyer_id = #{buyerId},
            </if>
            <if test="sellId != null">
                sell_id = #{sellId},
            </if>
            <if test="buyerName != null and buyerName != ''">
                buyer_name = #{buyerName},
            </if>
            <if test="sellName != null and sellName != ''">
                sell_name = #{sellName},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from orders where id = #{id}
    </delete>
    <delete id="deleteByIds">
        delete from orders
        where id in
        <foreach collection="ids" open="(" item="id" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

</mapper>